import { InteractionRepository } from '../models/InteractionRepository';

async function checkAndAddComments() {
  const repo = new InteractionRepository();
  
  console.log('üîç Ki·ªÉm tra d·ªØ li·ªáu trong database...\n');
  
  try {
    // 1. Ki·ªÉm tra users
    console.log('üë• Ki·ªÉm tra b·∫£ng users:');
    const users = await repo.listComments(1, 1); // This will fail if no users, but we'll handle it
    console.log('   - Users check completed');
    console.log('');
    
    // 2. Ki·ªÉm tra comments hi·ªán t·∫°i
    console.log('üí¨ Ki·ªÉm tra b·∫£ng comments:');
    const comments = await repo.listComments(1, 5);
    console.log(`   - S·ªë l∆∞·ª£ng comments: ${comments.length}`);
    console.log('');
    
    if (comments.length === 0) {
      console.log('üìù T·∫°o d·ªØ li·ªáu test cho comments...');
      
      // T·∫°o m·ªôt comment test (this will fail if no users/movies exist)
      try {
        const testComment = await repo.createComment(1, 1, 'Phim n√†y hay qu√°! T√¥i r·∫•t th√≠ch!');
        console.log(`   ‚úÖ ƒê√£ t·∫°o comment ID: ${testComment.id}`);
      } catch (error) {
        console.log('   ‚ùå Kh√¥ng th·ªÉ t·∫°o comment test - c√≥ th·ªÉ thi·∫øu users ho·∫∑c movies');
      }
      
    } else {
      console.log('‚úÖ B·∫£ng comments ƒë√£ c√≥ d·ªØ li·ªáu!');
      
      console.log('\nüìã M·ªôt s·ªë comments m·∫´u:');
      comments.forEach((comment: any, index: number) => {
        console.log(`   ${index + 1}. "${comment.content.substring(0, 50)}..." - ${comment.fullname || comment.username}`);
      });
    }
    
  } catch (error) {
    console.error('‚ùå L·ªói khi ki·ªÉm tra database:', error);
  }
}

// Ch·∫°y script
checkAndAddComments().then(() => {
  console.log('\n‚úÖ Ho√†n th√†nh ki·ªÉm tra!');
  process.exit(0);
}).catch(error => {
  console.error('‚ùå L·ªói:', error);
  process.exit(1);
});
