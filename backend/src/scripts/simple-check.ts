import { InteractionRepository } from '../models/InteractionRepository';

async function simpleCheck() {
  const repo = new InteractionRepository();
  
  console.log('üîç Ki·ªÉm tra d·ªØ li·ªáu trong database...\n');
  
  try {
    // Ki·ªÉm tra comments
    console.log('üí¨ Ki·ªÉm tra comments:');
    const comments = await repo.listComments(1, 5);
    console.log(`   - S·ªë l∆∞·ª£ng comments: ${comments.length}`);
    
    if (comments.length > 0) {
      console.log('   üìã Comments m·∫´u:');
      comments.forEach((comment: any, index: number) => {
        console.log(`      ${index + 1}. "${comment.content.substring(0, 50)}..." - User: ${comment.username || comment.user_id}`);
      });
    } else {
      console.log('   ‚ùå Kh√¥ng c√≥ comments trong database');
      
      // Th·ª≠ t·∫°o m·ªôt comment test
      try {
        console.log('üìù T·∫°o comment test...');
        const testComment = await repo.createComment(1, 1, 'Phim n√†y hay qu√°! T√¥i r·∫•t th√≠ch!');
        console.log(`   ‚úÖ ƒê√£ t·∫°o comment ID: ${testComment.id}`);
      } catch (error) {
        console.log('   ‚ùå Kh√¥ng th·ªÉ t·∫°o comment test - c√≥ th·ªÉ thi·∫øu users ho·∫∑c movies');
      }
    }
    
  } catch (error) {
    console.error('‚ùå L·ªói:', error);
  }
}

simpleCheck().then(() => {
  console.log('\n‚úÖ Ho√†n th√†nh ki·ªÉm tra!');
  process.exit(0);
}).catch(error => {
  console.error('‚ùå L·ªói:', error);
  process.exit(1);
});
