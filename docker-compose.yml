services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: phimhub-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=PhimHub123!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "bash -c 'echo > /dev/tcp/localhost/1433' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 20s
      timeout: 3s
  # Optional database seeding service
  # Only runs if you have db_moi1.bacpac file and use --profile seed
  db-seed:
    build:
      context: ./seed
      dockerfile: Dockerfile
    container_name: phimhub-db-seed
    depends_on:
      - sqlserver
    volumes:
      - ../db_moi1.bacpac:/data/db.bacpac:ro
    environment:
      - DB_HOST=sqlserver
      - DB_PORT=1433
      - DB_USER=sa
      - DB_PASS=PhimHub123!
      - DB_NAME=PhimHub
      - SLEEP_SECONDS=10
      - MAX_RETRIES=40
      - RETRY_DELAY=5
    restart: "no"
    profiles:
      - seed

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: phimhub-backend
    env_file:
      - ./.env
    environment:
      - NODE_ENV=production
      - PORT=3001
      - FRONTEND_URL=http://localhost:8080
      - JWT_SECRET=change-me
      - DB_HOST=sqlserver
      - DB_PORT=1433
      - DB_USER=sa
      - DB_PASS=PhimHub123!
      - DB_NAME=PhimHub
      - DB_ENCRYPT=true
      - DB_TRUST_SERVER_CERT=true
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/dist:/app/dist
    depends_on:
      sqlserver:
        condition: service_healthy
    ports:
      - "3001:3001"
    restart: unless-stopped
    command: ["sh", "-c", "node scripts/wait-for.mjs sqlserver:1433 --timeout 120 && node dist/index.js"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: phimhub-frontend
    depends_on:
      - backend
    ports:
      - "8080:80"
    restart: unless-stopped

volumes:
  sqlserver_data: {}
